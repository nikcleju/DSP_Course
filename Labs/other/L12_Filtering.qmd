---
jupyter: python3
---

# DSP Lab 12: Filtering of an ECG signal

# Objective

Students should be able to design a basic filters and perform signal filtering operations in Matlab

# Theoretical notions

# Matlab functions

## Filter design

Use `fdatool` in Matlab for a filter design GUI tool. Use `fir1()`, `fir2()` or `firpm()` to design a FIR filter programmatically. 

You can also use online tools like TFilter ([http://t-filter.engineerjs.com/](http://t-filter.engineerjs.com/)).

## Filtering 

Use `filter()` to apply a filter to an input signal:

```{python}
y = filter(b,a,x)
```

- b = the numerator coefficients of H(z)
- a = the denominator coefficients of H(z)
- x = the input signal
- y = the output filter

For an FIR filter, `a = 1` and `b =` the impulse response `h`.

## Zero-phase filtering

The function `filtfilt()` achieves zero-phase filtering of a vector `x` by filtering it twice:
  
  - once in the normal direction (start to end)
  - then flip the result and filter again (i.e. in the opposite direction)
  
In this way:
  
  - the amplitude response is applied twice (i.e. the signal is multiplied with $|H(\omega)|^2$ instead of $|H(\omega)|^2$)
  - the phase is canceled (zero-phase filter)

## Filtering an image

We can obtain a 2D filtering of an image by filtering the rows and then the columns (the order doesn;t matter), i.e. with successive 1D filtering of the rows and columns.

We can use `filter()` on images. We pass an image (matrix) as the input signal and we specify the dimension along we filter in a fourth argument `dim`.
Then the rows (if `dim=2`) or columns (if `dim=1`) are filtered independently, as if they were 1D signals.

```{python}
I2 = filter(b, a, I, 1);   # Filter the columns of image I, independently
I3 = filter(b, a, I2, 2);  # Then take the result and filter its rows, independently
```

On the contrary, `filtfilt()` on images only filters across the first dimension (it doesn't have an argument `dim`. In this case we must transpose the image ourselves.

```{python}
I2 = filtfilt(b, a, I)     # Filter the columns of image I, independently
I2 = filtfilt(b, a, I2')   # Then take the result, transpose, filter again
I2 = I2';                  # Then transpose again to get back original shape
```

# Exercises

1. Load the signal from `ECGsignal.mat` and display it.

2. Design several linear-phase FIR band-pass filters, of order at least 20, and filter the ECG signal with them using `filter()`.

    Display the original signal and the four filtered versions as 5 subplots of a window.

    According to the recommendations in [https://www.hindawi.com/journals/isrn/2012/706217/](https://www.hindawi.com/journals/isrn/2012/706217/), the filters should have the folllwing pass bands:
      
      - 0.05 Hz - 40 Hz
      - 0.05 Hz - 100 Hz
      - 0.5 Hz - 40 Hz
      - 0.5 Hz - 100 Hz

    The sampling frequency of the ECG signal is 360 Hz.


3. What is the delay introduced by the filters?

    Replace `filter()` with `filtfilt()` and regenerate the plot. What is the delay now?
   
4. Load the `Lena` image and display it.

    Filter the image with one of the filters designed, using `filter`(), and display it.

    Then filter the image using `filtfilt()` and display.
   
# Final questions

TBD

